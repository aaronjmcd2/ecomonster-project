EcoMonster Project — Code Overview Summary (as of Refactor Phase 3)
====================================================================

🧩 Core Principles
------------------
- Single Responsibility per script
- Shared concerns now refactored into helper modules
- Scripts remain focused while logic is modularized
- Creature behaviors are cleanly separated
- Rolling averages and efficiency now use shared modules

📂 Project Structure
--------------------
- Monsters/         → FireElemental.gd, CoalWorm.gd, Dragon.gd
- Modules/          → SearchModule.gd, ConversionModule.gd, InventoryData.gd, EfficiencyTracker.gd, RollingStatTracker.gd
- UI/               → InventoryUI, InventorySlot.gd, MonsterInfoPopup.gd, SearchRadiusDisplay.gd
- Systems/          → Main.gd (entry point, sets up inventory and hotbar)

🔁 Creature Scripts
-------------------
1. FireElemental.gd
   - Searches for coal tiles
   - Converts coal to lava via ConversionModule
   - Wanders when idle or on cooldown
   - Tracks efficiency and Lava/min using shared modules

2. CoalWorm.gd
   - Searches for unclaimed ore drops
   - Converts tile under or nearby into coal
   - Tracks efficiency and Coal/min using shared modules

3. Dragon.gd
   - Searches for lava, consumes it
   - Replaces lava with soil
   - Excretes ore after cooldown
   - Tracks efficiency and Ore/min using shared modules
   - Wanders while digesting

🧠 Shared Modules (Autoloaded or Preloaded)
-------------------------------------------
- SearchModule.gd
  → `find_closest_ore_drop()` for CoalWorms
  → `find_nearest_tile()` for FireElemental and Dragon

- ConversionModule.gd
  → `convert_tile()` handles ore-to-coal (via soil)
  → `replace_tile()` replaces one tile type with another

- InventoryData.gd (class_name InventoryData)
  → Manages inventory grid, hotbar index
  → Handles stack movement and item drops

- EfficiencyTracker.gd
  → Handles score-based efficiency tracking (0–100%)

- RollingStatTracker.gd
  → Tracks rolling averages over time (e.g., Coal/min, Lava/min, Ore/min)

🎨 UI Scripts
-------------
- InventorySlot.gd
  → Drag/drop, stack merging, right-click drop
  → Uses icon and count_label for visuals

- MonsterInfoPopup.gd
  → Displays creature info on click
  → Updates in real time via `get_live_stats()`
  → Shows/hides SearchRadiusDisplay

- SearchRadiusDisplay.gd
  → Draws a toggleable circle around creatures

🗺️ Main.gd
-----------
- Waits for nodes to load
- Sets up inventory grid and hotbar with test items
- Toggles inventory visibility on keybind

✅ Everything is:
- Modular and scalable
- Documented and consistent
- Live-updating and performance-aware
- Ready for ongoing development and future polish